import groovy.xml.MarkupBuilder
import org.jooq.codegen.GenerationTool
import org.yaml.snakeyaml.Yaml

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        classpath 'org.jooq:jooq-codegen:3.13.4'
        classpath 'mysql:mysql-connector-java:8.0.19'
        classpath 'org.yaml:snakeyaml:1.26'
    }
}


plugins {
    id 'java'
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '1.4.20'
    id "de.fuerstenau.buildconfig" version "1.1.8"
    id 'nu.studer.jooq' version '5.1.0'
}

//sourceSets{
//    main{
//        java{
//            srcDir "src/main/java"
//        }
//    }
//}

sourceCompatibility = 11
compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "11"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "11"
    }
}

group 'io.io.github.mzdluo123.timetablebot'
version '1.0.8-beta'

def versionCode  = 1

mainClassName = 'io.github.mzdluo123.timetablebot.MainKt'

repositories {
    mavenCentral()
    jcenter()

//    maven {
//        url "https://libraries.minecraft.net"
//    }
}


buildConfig{
    appName = project.name
    version = project.version.toString()
    clsName = 'BuildConfig'      // sets the name of the BuildConfig class
    packageName = "io.github.mzdluo123.timetablebot" // sets the package of the BuildConfig class,
    charset = 'UTF-8'

    buildConfigField("long",   "BUILD_UNIXTIME",   System.currentTimeMillis().toString() + "L")
    buildConfigField("String", "BUILD_JDK",        System.getProperty("java.version"))
    buildConfigField("int",    "VERSION_CODE",     versionCode.toString())
}


dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.4.20"

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.9'

    // https://mvnrepository.com/artifact/net.mamoe/mirai-core
    compile group: 'net.mamoe', name: 'mirai-core', version: '1.3.1'

    // https://mvnrepository.com/artifact/net.mamoe/mirai-core
    compile group: 'net.mamoe', name: 'mirai-core-qqandroid', version: '1.3.1'

    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.13.3'

    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-api
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.13.3'

    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-api
    compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.13.3'

    // https://mvnrepository.com/artifact/org.yaml/snakeyaml
    compile group: 'org.yaml', name: 'snakeyaml', version: '1.26'

//    // https://mvnrepository.com/artifact/org.slf4j/slf4j-log4j12
//    compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.30'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.8.0'

    // https://mvnrepository.com/artifact/org.quartz-scheduler/quartz
    compile group: 'org.quartz-scheduler', name: 'quartz', version: '2.3.2'


    compile 'org.jooq:jooq:3.13.4'

    compile 'com.squareup.okhttp3:okhttp:4.8.0'
    implementation "com.google.code.gson:gson:2.8.5"
    implementation "mysql:mysql-connector-java:8.0.19"
    implementation "com.zaxxer:HikariCP:3.4.2"

    // https://mvnrepository.com/artifact/org.jsoup/jsoup
    compile group: 'org.jsoup', name: 'jsoup', version: '1.13.1'

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

task generateJooq {
   doLast("gen") {
       def yml = new Yaml()
       def data = yml.load(new FileReader( new File("config.yml")))
       def writer = new StringWriter()
       def xml = new MarkupBuilder(writer)
               .configuration('xmlns': 'http://www.jooq.org/xsd/jooq-codegen-3.13.0.xsd') {
                   jdbc() {
                       url(data["dbUrl"])
                       user(data["dbUser"])
                       password(data["dbPwd"])
                   }
                   generator() {
                       database() {

                       }
                       // Watch out for this caveat when using MarkupBuilder with "reserved names"
                       // - https://github.com/jOOQ/jOOQ/issues/4797
                       // - http://stackoverflow.com/a/11389034/521799
                       // - https://groups.google.com/forum/#!topic/jooq-user/wi4S9rRxk4A
                       generate() {
                           pojos true
                           daos true
                       }
                       target() {
                           packageName('io.github.mzdluo123.timetablebot.gen')
                           directory('src/main/java')
                       }
                   }
               }

// Run the code generator
// ----------------------
       GenerationTool.generate(writer.toString())

   }
}